{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rakesh/Projetcs/nextJsPOC/component/Comment.js\";\n\nconst Comment = ({\n  comment\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"comment\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-user\",\n    children: comment.user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-content\",\n    dangerouslySetInnerHTML: {\n      __html: comment.content\n    },\n    children: comment.comments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nested-comments\",\n      children: comments.comments.map(nestedComment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: nestedComment\n      }, nestedComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 3\n}, this);\n\nexport default Comment;","map":{"version":3,"sources":["/Users/rakesh/Projetcs/nextJsPOC/component/Comment.js"],"names":["Comment","comment","user","__html","content","comments","map","nestedComment","id"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cAA+BA,OAAO,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEF,OAAO,CAACG;AAAlB,KAF3B;AAAA,cAIGH,OAAO,CAACI,QAAR,iBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGA,QAAQ,CAACA,QAAT,CAAkBC,GAAlB,CAAuBC,aAAD,iBACrB,QAAC,OAAD;AAAgC,QAAA,OAAO,EAAEA;AAAzC,SAAcA,aAAa,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAiBA,eAAeR,OAAf","sourcesContent":["const Comment = ({ comment }) => (\n  <div className=\"comment\">\n    <div className=\"comment-user\">{comment.user}</div>\n    <div\n      className=\"comment-content\"\n      dangerouslySetInnerHTML={{ __html: comment.content }}\n    >\n      {comment.comments && (\n        <div className=\"nested-comments\">\n          {comments.comments.map((nestedComment) => (\n            <Comment key={nestedComment.id} comment={nestedComment} />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n);\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}